plugins {
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
}

archivesBaseName = 'telegram-state-machine-spring-starter'
group = parent.group
version = parent.version

bootJar.enabled = false
jar.enabled = true

jar {
    from sourceSets.main.allJava
    from project(':core').sourceSets.main.allJava

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath
                .findAll { it.name.endsWith('telegram-state-machine.jar') }
                .collect { zipTree(it) }
    }
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

dependencies {
    implementation(project(":core"))
//    api('com.github.drednote:telegram-state-machine:master-SNAPSHOT')

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    api 'com.esotericsoftware:kryo:4.0.2'

    // data
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly "org.postgresql:postgresql:42.5.1"

    compileOnly 'org.springframework.boot:spring-boot-starter-validation'
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId group
            artifactId archivesBaseName
            version System.getProperty("generatedVersion") ?: "master-SNAPSHOT"

            from components.java
            artifact sourceJar {
                from sourceSets.main.allJava
                from project(':core').sourceSets.main.allJava
                classifier "sources"
            }

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
}